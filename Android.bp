package {
    default_applicable_licenses: ["external_deqp_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
//
// large-scale-change included anything that looked like it might be a license
// text as a license_text. e.g. LICENSE, NOTICE, COPYING etc.
//
// Please consider removing redundant or irrelevant files from 'license_text:'.
// See: http://go/android-license-faq
license {
    name: "external_deqp_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "SPDX-license-identifier-BSD",
        "SPDX-license-identifier-MIT",
    ],
    license_text: [
        "LICENSE",
        "NOTICE",
    ],
}

build = ["AndroidGen.bp"]

cc_library_shared {
    name: "libdeqp",
    defaults: ["libdeqp_gen"],

    tidy_checks: [
        // The clang-tidy google-explicit-constructor warning is issued to nearly
        // 1000 conversion constructors in this project. They are from more than
        // 500 source files. Most of them should be declared explicit, but many
        // of them need to be implicit. Until we correctly mark them as explicit
        // or NOLINT(implicit), we suppress the google-explicit-constructor check.
        "-google-explicit-constructor",

        "-google-build-explicit-make-pair",
        "-google-global-names-in-headers",
        "-google-runtime-member-string-references",
        "-google-runtime-operator",
    ],

    header_libs: ["jni_headers"],

    include_dirs: [
        "external/deqp-deps/SPIRV-Headers/include",
    ],

    shared_libs: [
        "libEGL",
        "libGLESv2",
        "libandroid",
        "liblog",
        "libm",
        "libc",
        "libz",
        "libdl",
    ],

    static_libs: [
        "libpng_ndk",
        "deqp_OSDependent",
        "deqp_OGLCompiler",
        "deqp_HLSL",
        "deqp_glslang",
        "deqp_SPIRV",
        "deqp_spirv-tools",
        "deqp_amber",
    ],

    cflags: [
        "-DDEQP_SUPPORT_GLES1=1",
        "-DDE_ANDROID_API=28",
        "-D_XOPEN_SOURCE=600",
        "-DDEQP_TARGET_NAME=\"android\"",
        "-DQP_SUPPORT_PNG=1",
        "-DDEQP_HAVE_GLSLANG=1",
        "-DDEQP_HAVE_SPIRV_TOOLS=1",
        "-Wall",
        "-Werror",
        "-Wconversion",
        "-fwrapv",
        "-Wno-implicit-fallthrough",
        "-Wno-sign-conversion",
        "-Wno-unused-private-field",
        "-DENABLE_HLSL",
    ],

    sdk_version: "27",
    cppflags: [
        "-Wno-non-virtual-dtor",
        "-Wno-delete-non-virtual-dtor",
        "-Wno-implicit-int-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-switch",
        "-Wno-unused-parameter",
        "-Wno-unused-variable",
        "-fexceptions",
    ],
    rtti: true,
    stl: "c++_static",
}

android_test {
    name: "com.drawelements.deqp",

    test_suites: [
        "cts",
        "mts",
        "vts10",
    ],

    srcs: ["android/package/src/**/*.java"],
    resource_dirs: ["android/package/res"],
    manifest: "android/package/AndroidManifest-integration.xml",

    asset_dirs: [
        "data",
        "external/vulkancts/data",
        "external/graphicsfuzz/data",
    ],

    jni_libs: ["libdeqp"],

    compile_multilib: "both",

    // We could go down all the way to API-13 for 32bit. 22 is required for 64bit ARM.
    sdk_version: "test_current",
}
